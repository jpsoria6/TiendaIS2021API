//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LoginServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Autorizacion", Namespace="http://schemas.datacontract.org/2004/07/SGE.Service.Contracts.Data")]
    public partial class Autorizacion : object
    {
        
        private long CuitField;
        
        private string ErrorField;
        
        private string SignField;
        
        private string TokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Cuit
        {
            get
            {
                return this.CuitField;
            }
            set
            {
                this.CuitField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error
        {
            get
            {
                return this.ErrorField;
            }
            set
            {
                this.ErrorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sign
        {
            get
            {
                return this.SignField;
            }
            set
            {
                this.SignField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token
        {
            get
            {
                return this.TokenField;
            }
            set
            {
                this.TokenField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ISTP1.Service.Contracts.Service", ConfigurationName="LoginServiceReference.ILoginService")]
    public interface ILoginService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ISTP1.Service.Contracts.Service/ILoginService/SolicitarAutorizacion", ReplyAction="http://ISTP1.Service.Contracts.Service/ILoginService/SolicitarAutorizacionRespons" +
            "e")]
        LoginServiceReference.SolicitarAutorizacionResponse SolicitarAutorizacion(LoginServiceReference.SolicitarAutorizacionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ISTP1.Service.Contracts.Service/ILoginService/SolicitarAutorizacion", ReplyAction="http://ISTP1.Service.Contracts.Service/ILoginService/SolicitarAutorizacionRespons" +
            "e")]
        System.Threading.Tasks.Task<LoginServiceReference.SolicitarAutorizacionResponse> SolicitarAutorizacionAsync(LoginServiceReference.SolicitarAutorizacionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SolicitarAutorizacion", WrapperNamespace="http://ISTP1.Service.Contracts.Service", IsWrapped=true)]
    public partial class SolicitarAutorizacionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ISTP1.Service.Contracts.Service", Order=0)]
        public string codigo;
        
        public SolicitarAutorizacionRequest()
        {
        }
        
        public SolicitarAutorizacionRequest(string codigo)
        {
            this.codigo = codigo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SolicitarAutorizacionResponse", WrapperNamespace="http://ISTP1.Service.Contracts.Service", IsWrapped=true)]
    public partial class SolicitarAutorizacionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ISTP1.Service.Contracts.Service", Order=0)]
        public LoginServiceReference.Autorizacion SolicitarAutorizacionResult;
        
        public SolicitarAutorizacionResponse()
        {
        }
        
        public SolicitarAutorizacionResponse(LoginServiceReference.Autorizacion SolicitarAutorizacionResult)
        {
            this.SolicitarAutorizacionResult = SolicitarAutorizacionResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ILoginServiceChannel : LoginServiceReference.ILoginService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<LoginServiceReference.ILoginService>, LoginServiceReference.ILoginService
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public LoginServiceClient() : 
                base(LoginServiceClient.GetDefaultBinding(), LoginServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.SGEAuthService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoginServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(LoginServiceClient.GetBindingForEndpoint(endpointConfiguration), LoginServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoginServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(LoginServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoginServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(LoginServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public LoginServiceReference.SolicitarAutorizacionResponse SolicitarAutorizacion(LoginServiceReference.SolicitarAutorizacionRequest request)
        {
            return base.Channel.SolicitarAutorizacion(request);
        }
        
        public System.Threading.Tasks.Task<LoginServiceReference.SolicitarAutorizacionResponse> SolicitarAutorizacionAsync(LoginServiceReference.SolicitarAutorizacionRequest request)
        {
            return base.Channel.SolicitarAutorizacionAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SGEAuthService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SGEAuthService))
            {
                return new System.ServiceModel.EndpointAddress("http://istp1service.azurewebsites.net/LoginService.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return LoginServiceClient.GetBindingForEndpoint(EndpointConfiguration.SGEAuthService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return LoginServiceClient.GetEndpointAddress(EndpointConfiguration.SGEAuthService);
        }
        
        public enum EndpointConfiguration
        {
            
            SGEAuthService,
        }
    }
}
